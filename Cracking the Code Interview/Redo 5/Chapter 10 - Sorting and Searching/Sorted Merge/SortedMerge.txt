Question
    You are given two sorted arrays, A and B, where A has a large enough buffer at the
    end to hold B. Write a method to merge B into A in sorted order.

Thoughts before Coding
    - Since, we have enough space at the end of array A, we do not need to allocate extra space
    - If we try to put elements in front of array A, we will be shifting all of the elements over
        - We should try replacing elements from the end
    - Our ordering of our merged array is ascending, so the largest element is at the end
        - We should start comparing our 2 arrays from the end
    - The information we currently need is
        - The last index of array A with elements
        - The last index of array B
        - The index of our merged

Answer
    - We will declare three variables
        - last index of A
        - last index of B
        - index of our merged Array
    - We have a 'while' loop with the condition 'indexB >= 0'
        - This is to make sure we have moved all of our elements in array B over
        - We do not need our indexA in our 'while' loop because the elements are already in place
    - In each of the iteration
        - if our value in indexA is greater than our value in indexB
            - we will move our value from indexA to the back 'mergedIndex'
            - Don't forget to check if our indexA is greater than or equal to zero
                - We do not want get an index out of bound exception
            - Decrement our indexA after we moved our value
        - If our value in indexB is greater than the value at indexA
            - Copy our value from indexB into the mergedIndex
            - Decrement our indexB
        - After, we have moved an element from either indexA or indexB
            - We will decrement our mergedIndex