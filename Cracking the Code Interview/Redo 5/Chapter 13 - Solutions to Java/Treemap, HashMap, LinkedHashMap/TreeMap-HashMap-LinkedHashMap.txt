Question
    TreeMap, HashMap, LinkedHashMap: Explain the differences between TreeMap, HashMap, and
    LinkedHashMap. Provide an example of when each one would be best.

What does all of the different maps provide?
    - They all offer a key->value map and a way to iterate through the keys
    - The difference between these classes is the time complexity and the ordering of the keys

HashMap
    - Offers O(1) lookup and insertion
    - Ordering of the keys are arbitrary
    - it is implemented with an array of LinkedList

TreeMap
    - Offers O(logn) lookup and insertion
    - Keys are ordered, so you can iterate through the keys in sorted order
        - Each key must implement the Comparable interface
    - Implemented by a Red-Black-Tree

LinkedHashMap
    - Offers O(1) lookup and insertion
    - Keys are ordered by their insertion order
    - Implemented by double-linked buckets

When you might need ordering in real life?
    - Suppose you are creating a mapping of names to Person objects. And you need to periodically output the people in alphabetical order by name
        - A TreeMap allows you to do this
    - TreeMap also offers a way to, given a name, output the next 10 people
    - A LinkedHashMap is useful when you need the ordering of the keys to match the ordering of insertion
        - This might be useful in caching situations, when you want to delete the oldest element