Question
    Random Crashes: You are given the source to an application which crashes when it is run. After
    running it ten times in a debugger, you find it never crashes in the same place. The application is
    single threaded, and uses only the C standard library. What programming errors could be causing
    this crash? How would you test each one?

Answer
    - The question at hand largely depends on the type of application being diagnosed.
    - Here are some general causes for crashes
        - Random variables
            - The application uses some random number or variable components that may not be fixed for every execution
                - User input
                - Random number generated
                - Time of the day
        - Uninitialized Variables
            - These kind of variables can take on arbitrary values in some languages, which will take a slightly different path every time
        - Memory leak
            - Number of processes running at each particular time
            - Heap Overflow
            - Corruption of data
            - Forgetting to close connections
        - External Dependencies
            - The program may depend on another application, machine, API or resource. If there are multiple dependencies, the program can crash anytime
    - In order to track down the issue, we should start with learning as much as possible about the application.
        - Who is running it?
        - What are they doing with it?
        - What kind of application is it?
    - If the application does not crash in exactly the same place.
        - It is possible to link to a specific components or scenarios.
            - Lower level components
            - File I/O
        - It can also be a good approach to start with elimination.
            - Closing down all other applications in the system.
            - Track resource use very carefully. Database connections, HTTP connections
            - Running on a different machine and see if the same situations occur
    - There are also tools to check the status of a program
        - Such as heap size
        - The number of threads
        - The number of processes
        - Memory leaks