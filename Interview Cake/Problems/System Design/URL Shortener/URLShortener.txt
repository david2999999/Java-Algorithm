Question
    Design a URL shortener
        You know, like bit.ly.
        Let's call it ca.ke!

Scope the Project
    - System questions are intentionally left open end, so we have to ask questions and make some decisions
      about what exactly you are building to get on the same page as your interviewer.

Features
    - Is this full web application with an user interface, or just an API that allows users to perform HTTP calls?
        - We will build an API to start
    - Since, this is an API, do we need authentication or user accounts or developer API key?
        - No, lets just make it open to start
    - Can people modify or delete links?
        - We will leave that out for now
    - If people can't delete links, do they persist forever? or do we automatically filter old ones?
        - What policies can we use for removing old ones?
            1) We could remove links that are created some time ago, like 6 months
            2) We could remove links that has not been visited for quiet some time, like 6 months
        - Our 2nd choice seems to be less frustrating the our first choice
            - But, what if the link is on the private, an internal resource link for company or universities?
            - What if someone has these URLs on a pamphlet, did not give out any pamphlets for a few months,
              then started giving them out again?
                - This seems reasonable thing that might happen, if the link suddenly stopped working, it
                  will be quite frustrating for users.
            - What is a book has shortlinks printed on them in a million copies?
        - We will decide to let links exist forever.
    - Should we allow users to customize their shortlinks or do we auto-generate?
        - Our users may want to append custom descriptions to our shortened URL.
    - Do we need analytics, so we can know how many clicked on a link?
        - Good idea, but let's leave it out to start

Design Goals
    - Some design goals have higher priority than others, so we need to think about the order of goals
        - We should be able to store a lot of links, since the links does not have expiration
        - Our shortlinks should be as short as possible. Having shorter links that our competitors could be a business advantage
        - Following a shortlink should be fast
        - Shortlinks should be resilient to load spikes, such as being on a reddit post
