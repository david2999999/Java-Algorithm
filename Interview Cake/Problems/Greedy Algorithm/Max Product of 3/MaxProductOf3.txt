Question
    Given an array of integers, find the highest product you can get from three of the integers.
    The input arrayOfInts will always have at least three integers.

Thoughts before coding
    - What if we try to brute force the problem by making three iterations of 'for' loop
        - Multiplying each integer by another integer
        - Then using the product to multiply another integer
        - What is the time complexity of this approach?
            - It is O(n^3), we can do better
    - What if we try to sort the array in ascending order and take the 3 largest element from the end of the array?
        - The sorting take O(nlogn) runtime
    - Since, we must check through each of the elements to find the three largest elements, we must use at least O(n) runtime

Answer
    - Lets try to iterate through our array and see what do we need to keep track
        - With our current element
            - We need to find out if the value can make a new maximum product of 3
            - But, what do we need to keep track to determine this?
                - We need to keep track of the maximum product of 2 of the numbers
                - Did we account for negative numbers?
                    - If there is a very low negative number and our current number is also negative
                    - We may get a larger positive product of 3
                - So we need to keep track of the largest maximum/minimum product of 2
            - Now we know that we need to keep track maximum product of 3, and maximum/minimum product of 2
            - How do we keep track of the maximum/minimum product of 2?
                - We will need to also keep track of the maximum and minimum number inside our array
    - We have all of the information we need, so how do we start?
    - Since, we must need at least 3 integers, lets first validate our array has at least 3 elements
        - We can first determine our largest and minimum element between our elements in index 0 and 1
        - We can then determine our maximum/minimum product of our first 2 elements
        - We can then determine our current maximumProductOf3 by multiplying elements 0,1,2
    - We can use a 'for' loop to iterate our values from index 2 and forward
        - We will update the maximum product of 3 by checking the greater value between
            - current maximumProductOf3
            - current value * maximum product of 2
            - current value * minimum product of 2
        - We will update maximum product of 2 by checking the greater value between
            - current highest
            - current value * highest
            - current value * lowest
        - We will update minimum product of 2 by checking the the smaller value between
            - current lowest
            - current value * highest
            - current value * lowest
        - We will update our highest by checking the higher value between
            - current highest
            - current value
        - We will update our lowest by checking the lower value between
            - current lowest
            - current value

    - What is the time and space complexity?
        - Time complexity = O(n)
            - We only iterate through the array one time and updating our variables
        - Space complexity = O(1)
            - We declare primitive variables to keep track of our values







