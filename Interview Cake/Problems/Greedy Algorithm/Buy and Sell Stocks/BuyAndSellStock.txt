Question
    Writing programming interview questions hasn't made me rich yet ... so I might give up and start trading Apple stocks all day instead.
    First, I wanna know how much money I could have made yesterday if I'd been trading Apple stocks all day.
    So I grabbed Apple's stock prices from yesterday and put them in an array called stockPrices, where:

    - The indices are the time (in minutes) past trade opening time, which was 9:30am local time.
    - The values are the price (in US dollars) of one share of Apple stock at that time.

    Write an efficient method that takes stockPrices and returns the best profit I could have made from one purchase and one sale of one share of Apple stock yesterday.

Thoughts before coding
    - Brute force
        - Compare the price of each of the earlier times with all of the prices at later times
        - Keep track of the maximum profit on each iteration
        - What is the time and space complexity of this approach?
            - Time complexity = O(n + (n - 1) + (n - 2) + ...) = O(n^2)
            - Space complexity = O(1)
        - Can we do better with the runtime?
            - Can we try sorting the array? which can result in O(nlogn) runtime
                - No, this won't help us because we need to take the chronological order into consideration
